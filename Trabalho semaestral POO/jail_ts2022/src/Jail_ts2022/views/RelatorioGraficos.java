/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Jail_ts2022.views;

import java.awt.BorderLayout;
import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.renderer.category.LineAndShapeRenderer;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;
import Jail_ts2022.dao.ReclusoDao;
import Jail_ts2022.model.Recluso;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Mutisse
 */
public final class RelatorioGraficos extends javax.swing.JInternalFrame {

//
    Connection conexao = null;
    PreparedStatement stat = null; //pst quer dizer  PreparedStatement
    ResultSet rst = null;

    /**
     * Creates new form Relatorio
     */
    public RelatorioGraficos() {
        initComponents();

        showPieChart(new ReclusoDao().listarTodosReclusos());
        showBarChart(new ReclusoDao().listarTodosReclusos());
        showLineChart(new ReclusoDao().listarTodosReclusos());

    }

    Date data = new Date();
    DateFormat formato = DateFormat.getDateInstance(DateFormat.LONG);

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     *
     * @return
     */
    @SuppressWarnings("unchecked")


    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        showPieChart = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        showLineChart = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        showBarChart = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setBorder(javax.swing.BorderFactory.createEtchedBorder());
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle(" Relatório");
        setMinimumSize(new java.awt.Dimension(897, 606));
        setPreferredSize(new java.awt.Dimension(897, 606));

        jTabbedPane1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white));

        jPanel2.setLayout(null);

        showPieChart.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.white, java.awt.Color.white));

        javax.swing.GroupLayout showPieChartLayout = new javax.swing.GroupLayout(showPieChart);
        showPieChart.setLayout(showPieChartLayout);
        showPieChartLayout.setHorizontalGroup(
            showPieChartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 566, Short.MAX_VALUE)
        );
        showPieChartLayout.setVerticalGroup(
            showPieChartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 356, Short.MAX_VALUE)
        );

        jPanel2.add(showPieChart);
        showPieChart.setBounds(220, 40, 570, 360);

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel2.add(jLabel5);
        jLabel5.setBounds(300, 460, 420, 30);

        jTabbedPane1.addTab("showPieChart", jPanel2);

        jPanel1.setLayout(null);

        showLineChart.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.white, java.awt.Color.white));

        javax.swing.GroupLayout showLineChartLayout = new javax.swing.GroupLayout(showLineChart);
        showLineChart.setLayout(showLineChartLayout);
        showLineChartLayout.setHorizontalGroup(
            showLineChartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 986, Short.MAX_VALUE)
        );
        showLineChartLayout.setVerticalGroup(
            showLineChartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 356, Short.MAX_VALUE)
        );

        jPanel1.add(showLineChart);
        showLineChart.setBounds(30, 30, 990, 360);

        jPanel5.setBackground(new java.awt.Color(204, 204, 204));
        jPanel5.setLayout(null);
        jPanel1.add(jPanel5);
        jPanel5.setBounds(30, 410, 990, 130);

        jTabbedPane1.addTab("showLineChart", jPanel1);

        jPanel3.setLayout(null);

        showBarChart.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.white, java.awt.Color.white));

        javax.swing.GroupLayout showBarChartLayout = new javax.swing.GroupLayout(showBarChart);
        showBarChart.setLayout(showBarChartLayout);
        showBarChartLayout.setHorizontalGroup(
            showBarChartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 986, Short.MAX_VALUE)
        );
        showBarChartLayout.setVerticalGroup(
            showBarChartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 406, Short.MAX_VALUE)
        );

        jPanel3.add(showBarChart);
        showBarChart.setBounds(40, 20, 990, 410);

        jPanel6.setBackground(new java.awt.Color(204, 204, 204));
        jPanel6.setLayout(null);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel6.add(jLabel1);
        jLabel1.setBounds(30, 20, 320, 30);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel6.add(jLabel2);
        jLabel2.setBounds(780, 60, 180, 30);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel6.add(jLabel3);
        jLabel3.setBounds(30, 70, 320, 30);

        jLabel4.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.lightGray, java.awt.Color.lightGray));
        jPanel6.add(jLabel4);
        jLabel4.setBounds(10, 15, 970, 90);

        jPanel3.add(jPanel6);
        jPanel6.setBounds(40, 440, 990, 120);

        jTabbedPane1.addTab("showBarChart", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1068, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 609, Short.MAX_VALUE)
        );

        setBounds(0, 0, 1072, 638);
    }// </editor-fold>//GEN-END:initComponents
  /*=============================================================================*/

    public void showBarChart(List<Recluso> resclusos) {

        try {
            resclusos.stream().map((user) -> {
                if (user.getEstadoDaPrisao().equalsIgnoreCase("Cumprida")) {
                    Soltos++;
                    System.out.println(" "+Soltos);
                } else if (user.getEstadoDaPrisao().equalsIgnoreCase("Foragidos")) {
                    Foragidos++;
                } else if (user.getEstadoDaPrisao().equalsIgnoreCase("espera de julgamento")) {
                    eperaDejulgamento++;
                } else if (user.getEstadoDaPrisao().equalsIgnoreCase("condenado")) {
                    acumpririrpena++;
                } else if (user.getEstadoDaPrisao().equalsIgnoreCase("Caução")) {
                    Caucao++;
                }
                return user;
            }).forEachOrdered((_item) -> {

            });
        } catch (Exception e) {
        }
        totalRegistrados = acumpririrpena + Foragidos + eperaDejulgamento + acumpririrpena + Caucao + Soltos;
        activo = (totalRegistrados - (Caucao + Foragidos + acumpririrpena));

        /* sctpg capitura a senha para criptografar*/
        DefaultCategoryDataset barra = new DefaultCategoryDataset();
        barra.setValue(eperaDejulgamento, String.valueOf(formato.format(data)), "espera de julgamento");
        barra.setValue(activo, String.valueOf(formato.format(data)), "estao a cumprir a pena");
        barra.setValue(Soltos, String.valueOf(formato.format(data)), "pena Cumprida");
        barra.setValue(Caucao, String.valueOf(formato.format(data)), "Caução");
        barra.setValue(Foragidos, String.valueOf(formato.format(data)), "Foragidos");
        barra.setValue(frequencia, String.valueOf(formato.format(data)), "presos mas de uma vez");
        // barra.setValue(totalRegistrados, String.valueOf(formato.format(data)), "Total de Reclusos");
        JFreeChart grafico = ChartFactory.createBarChart3D("Estatistica de presidiarios ", " A ", " B ", barra, PlotOrientation.VERTICAL, true, true, false);
        //

        //
        jLabel1.setText("Total dos que Estao a espera de julgamento: " + eperaDejulgamento);
        jLabel3.setText("Total dos que Estao a Cumprir  pena: " + activo);
        jLabel2.setText("Total dos reclusos: " + totalRegistrados);
        // .setText("Ativos: " + activo);
        ChartPanel barChartPanel = new ChartPanel(grafico);
        barChartPanel.setBounds(5, 5, 980, 400);
        showBarChart.removeAll();
        showBarChart.add(barChartPanel, BorderLayout.CENTER);

    }

    /*=============================================================================*/
    public void showPieChart(List<Recluso> resclusos) {

        try {
            resclusos.stream().map((Recluso user) -> {
                if (user.getGenero().equalsIgnoreCase("Masculino")) {
                    masculino++;
                } else if (user.getGenero().equalsIgnoreCase("Feminino")) {
                    femenino++;
                }
                return user;
            }).forEachOrdered((_item) -> {
                totalMF = masculino + femenino;
            });
        } catch (Exception e) {
        }
        jLabel5.setText("Total "+totalMF);
        //
        DefaultPieDataset barDataset = new DefaultPieDataset();
        barDataset.setValue("Feminino", (int) femenino);
        barDataset.setValue("Masculino ", (int) masculino);
//        barDataset.setValue("Total ", (int) totalMF);

        //create chart
        JFreeChart piechart = ChartFactory.createPieChart3D(" Representação em género ", barDataset, true, true, false);//explain

        PiePlot piePlot = (PiePlot) piechart.getPlot();

        //changing pie chart blocks colors
        piePlot.setSectionPaint((int) femenino, Color.RED);
        piePlot.setSectionPaint((int) masculino, Color.BLUE);
       // piePlot.setSectionPaint((int) totalMF, Color.GREEN);
        piePlot.setBackgroundPaint(Color.white);

        //create chartPanel to display chart(graph)
        ChartPanel pieChartPanel = new ChartPanel(piechart);
        pieChartPanel.setBounds(5, 5, 560, 350);
        showPieChart.add(pieChartPanel, BorderLayout.CENTER);
        showPieChart.validate();
    }

    /*=============================================================================*/
    public void showLineChart(List<Recluso> resclusos) {
        //create dataset for the graph
        try {
            resclusos.stream().map((Recluso detento) -> {

                for (int i = 0; i < detento.getCrime().size(); i++) {
                    System.out.println(detento.getCrime().get(i).toString());
                    String tipoDeCrimes = detento.getCrime().get(i).getCategoriaDeCrime();
                    if (tipoDeCrimes.equalsIgnoreCase("Assalto")) {
                        Assalto++;
                    } else if (tipoDeCrimes.equalsIgnoreCase("Assassinato")) {
                        Assasinato++;

                    } else if (tipoDeCrimes.equalsIgnoreCase("Violação")) {
                        Violacao++;

                    } else if (tipoDeCrimes.equalsIgnoreCase("Caça furtiva")) {
                        CacaFurtiva++;

                    } else if (tipoDeCrimes.equalsIgnoreCase("Repito")) {
                        Repito++;

                    } else if (tipoDeCrimes.equalsIgnoreCase("Porte de armas inlegal")) {
                        Porto_de_armas++;

                    } else if (tipoDeCrimes.equalsIgnoreCase("Trafico")) {
                        Trafico++;

                    } else if (tipoDeCrimes.equalsIgnoreCase("Burla")) {
                        burla++;

                    } else if (tipoDeCrimes.equalsIgnoreCase("Nao definido'")) {
                        naoDefinido++;
                    }
                }
                return detento;
            }).forEachOrdered((_item) -> {
                totalCrimes = (int) (Assalto + Assasinato + Violacao + Trafico + Porto_de_armas + CacaFurtiva + Repito + Trafico);
            });
        } catch (Exception e) {
        }
        /* 
        essa parte ele faz a corespondencia no grfico
         */

        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        dataset.setValue(naoDefinido, String.valueOf(formato.format(data)), "Nao definido");
        dataset.setValue(Assalto, String.valueOf(formato.format(data)), "Assalto");
        dataset.setValue(burla, String.valueOf(formato.format(data)), "Burla");
        dataset.setValue(Assasinato, String.valueOf(formato.format(data)), "Assassinato");
        dataset.setValue(Violacao, String.valueOf(formato.format(data)), "Violação");
        dataset.setValue(assedio, String.valueOf(formato.format(data)), "Assedio");
        dataset.setValue(CacaFurtiva, String.valueOf(formato.format(data)), "Caça furtiva");
        dataset.setValue(Repito, String.valueOf(formato.format(data)), "Repito");
        dataset.setValue(Porto_de_armas, String.valueOf(formato.format(data)), "Porte de armas inlegal");
        dataset.setValue(Trafico, String.valueOf(formato.format(data)), "Trafico");
        dataset.setValue(totalCrimes, String.valueOf(formato.format(data)), "totalCrimes");
        //

        //create chart
        JFreeChart linechart = ChartFactory.createLineChart("Estatística de crimes em relação a provicias", "Tipo de crime", "Índice de criminalidade",
                dataset, PlotOrientation.VERTICAL, true, true, false);

        //create plot object
        CategoryPlot lineCategoryPlot = linechart.getCategoryPlot();
        lineCategoryPlot.setBackgroundPaint(Color.white);

        //create render object to change the moficy the line properties like color
        LineAndShapeRenderer lineRenderer = (LineAndShapeRenderer) lineCategoryPlot.getRenderer();
        Color lineChartColor = new Color(0, 0, 0);
        lineRenderer.setSeriesPaint(0, lineChartColor);

        //create chartPanel to display chart(graph)
        ChartPanel lineChartPanel = new ChartPanel(linechart);
        lineChartPanel.setBounds(5, 5, 980, 350);
        showLineChart.removeAll();
        showLineChart.add(lineChartPanel, BorderLayout.CENTER);
        showLineChart.validate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private String dataf;
    private SimpleDateFormat sdf;
    int masculino, femenino, totalMF, Caucao, naoDefinido, burla, assedio, frequencia, eperaDejulgamento, acumpririrpena, totalRegistrados, totalCrimes, Soltos, Foragidos, activo, removido, Porto_de_armas, Repito, CacaFurtiva, Violacao, Assalto, Trafico, Assasinato;
    float media;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel showBarChart;
    private javax.swing.JPanel showLineChart;
    private javax.swing.JPanel showPieChart;
    // End of variables declaration//GEN-END:variables
}
