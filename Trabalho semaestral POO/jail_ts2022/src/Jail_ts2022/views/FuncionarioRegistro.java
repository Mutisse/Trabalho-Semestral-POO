/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Jail_ts2022.views;

import java.awt.Color;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.YearMonth;
import java.util.Arrays;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.Random;
import java.util.regex.Pattern;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;
import Jail_ts2022.conexao.Conectar;
import Jail_ts2022.controller.ControllerFuncionario;
import Jail_ts2022.dao.FuncionarioDao;
import Jail_ts2022.dao.NivelDeAcessoDao;
import Jail_ts2022.dao.ProvinciasDAo;
import Jail_ts2022.model.Funcionario;
import Jail_ts2022.model.NivelDeAcesso;
import Jail_ts2022.model.Provincias;

/**
 *
 * @author Mutisse
 */
public final class FuncionarioRegistro extends javax.swing.JInternalFrame {

    Connection conexao = null;
    PreparedStatement stat = null; //pst quer dizer  PreparedStatement
    ResultSet rst = null;
    //

    // 
    //
    //
    /**
     * Creates new form FuncionarioDados
     */
    public FuncionarioRegistro() {
        initComponents();
        preecherCb();
        PrencherTabela();
        cb_provincia();
        btn_atualizar.setEnabled(false);
//        btn_eliminar.setEnabled(false);
        btn_salvar.setEnabled(false);

        //
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    void funcionarioExistente() {
        int contt = 0;
        for (int i = 0; i < jT_funcionarios.getRowCount(); i++) {
            if (txt_NumeroDeBI.getText().equals(jT_funcionarios.getModel().getValueAt(i, 5))) {
                contt = 1;
            }
            if (txt_Nuit.getText().equals(jT_funcionarios.getModel().getValueAt(i, 6))) {
                contt = 1;
            }
        }

        if (contt >= 1) {
            JOptionPane.showMessageDialog(null, "Este funcionário já existe", "Notificação ", JOptionPane.WARNING_MESSAGE);
        }

    }

    void ativarCAmpos() {
        rb_Masculino.setEnabled(true);
        rb_Femenino.setEnabled(true);
        JDataFormatada.setEnabled(true);
        txt_email.setEnabled(true);
        cb_perfil.setEnabled(true);
        tf_contacto.setEnabled(true);
        txt_Apelido.setEnabled(true);
        cb_provincias.setEnabled(true);
        txt_NumeroDeBI.setEnabled(iconable);
        txt_Nuit.setEnabled(true);

    }


    /* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  Preenche a comboxs    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  */
    public void preecherCb() {

        for (int i = 0; i < niveldeAcrsso.size(); i++) {
            if (!niveldeAcrsso.get(i).getCategoria().equalsIgnoreCase("Director geral")) {
                cb_perfil.addItem(niveldeAcrsso.get(i));

            }

        }
//

    }

    void cb_provincia() {

        cb_provincias.removeAllItems();
        for (int i = 0; i < listarProvincia.size(); i++) {

            cb_provincias.addItem(listarProvincia.get(i));

        }
    }

    /* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Star codigo  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Esse metodo faz a criacao de um noovo codgo.
     */
    public void Setarcodigo() {
        FuncionarioDao Dao = new FuncionarioDao();
        String str = String.valueOf(Dao.gerarCodigo());
        long itg = Integer.parseInt(str.substring(4, 5));
        itg++;
        lbl_Codigo.setText(YearMonth.now().getYear() + "" + itg);
    }

    void SentarSenha() {
        // parte da senha 
        Random random = new Random(); // onde e gerado os cod. de funcionario
        int codgoF = random.nextInt(9000);
        while (codgoF < 1000) {
            codgoF = random.nextInt(9000);

        }// fim while
        pf_Senha.setText(codgoF + "@" + YearMonth.now().getYear());
    }

    /* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Formatar  data   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Esse metodo faz com que o campo de selecinara a data ele pega a data atual apartir do sistema
     */
    public void FormatDatachoos() {
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        String data = sdf.format(Calendar.getInstance().getTime());
        try {
            JDataFormatada.setDate(sdf.parse(data));
            JDataFormatada.setMaxSelectableDate(sdf.parse(data));

        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(null, "Erro na conversão da data!");
        }
    }

    /* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Setar campos    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   esse metodo vai prencher os campos  de formulario funcionario com falaores perenchidos na tabela 
     */
    public void sett_campos() {
        //  ControllerFuncionario Desesctpg = new ControllerFuncionario(); Desesctpg.DesEmcriptar()
        try {
            int setar = jT_funcionarios.getSelectedRow();
           
            List<Funcionario> Lista = funcionarioDao.ListarTodos();
            for (Funcionario usuario : Lista) {
                if (jT_funcionarios.getModel().getValueAt(setar, 0).toString().equals(usuario.getCodigo())) {

                    if (!usuario.getEstado().equalsIgnoreCase("Removido")) {
                        if (!usuario.getEstado().equalsIgnoreCase("Inativo")) {

                            if (!usuario.getNivelDeAcesso().equals("Director Geral")) {

                                lbl_Codigo.setText(usuario.getCodigo());
                                txt_Nome.setText(usuario.getNome());
                                txt_Apelido.setText(usuario.getApelido());
                                if (usuario.getGenero().equals("Masculino")) {
                                    rb_Masculino.setSelected(true);
                                } else if (usuario.getGenero().equals("Feminino")) {
                                    rb_Femenino.setSelected(true);
                                }
                                txt_NumeroDeBI.setText(usuario.getNumeroDeBI());
                                txt_Nuit.setText(usuario.getNuit());
                                tf_contacto.setText(usuario.getContacto());
                                txt_email.setText(usuario.getEmail());
                                pf_Senha.setText(usuario.getSenha());
                                System.out.println(pf_Senha);
                                cb_perfil.setSelectedItem(usuario.getNivelDeAcesso().getCategoria());
                                cb_provincias.setSelectedItem(usuario.getProvincia().getProvicias());
                                DateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
                                Date date = (Date) formatter.parse(usuario.getDatadeNascimento());
                                JDataFormatada.setDate(date);

                            }
                        }
                    }

                }
            }

            ///
            ativarCAmpos();
        } catch (Exception e) {
            System.out.println(e);
            JOptionPane.showMessageDialog(null, e + " Erro!! Campo Selecionado esta vazio", "Notificação", JOptionPane.ERROR);
        }

    }

    /* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ prenche a tabela    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   
     */
    public void PrencherTabela() {
        try {
            FuncionarioDao CDao = new FuncionarioDao();
            ControllerFuncionario sctpg = new ControllerFuncionario();
            List<Funcionario> Lista = CDao.ListarTodos();
            DefaultTableModel newModelTable = (DefaultTableModel) jT_funcionarios.getModel();
            newModelTable.setRowCount(0);

            Lista.forEach((Funcionario funcionario) -> {
                // &&  
                if (!"Inativo".equalsIgnoreCase(funcionario.getEstado())) {

                    if (!"Director Geral".equalsIgnoreCase(funcionario.getNivelDeAcesso() + "")) {
                        newModelTable.addRow(new Object[]{funcionario.getCodigo(), funcionario.getNome(), funcionario.getApelido(),
                            funcionario.getGenero(), funcionario.getDatadeNascimento(),
                            funcionario.getNumeroDeBI(), funcionario.getNuit(), funcionario.getContacto(),
                            funcionario.getEmail(), funcionario.getNivelDeAcesso(), funcionario.getEstado(), sctpg.Emcriptar(funcionario.getSenha())});

                    }

                }
            });
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, e.getMessage() + " Erro ao preencher atabela ", "Notificação", JOptionPane.ERROR);
        }
    }

    /* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ limpar campos    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  */
    public void LimparCampos() {
        txt_Nome.setText(null);
        txt_Apelido.setText(null);
        txt_email.setText(null);
        pf_Senha.setText(null);
        txt_NumeroDeBI.setText(null);
        txt_Nuit.setText(null);
        tf_contacto.setText(null);
        lbl_Codigo.setText(null);
        buttonGroup.clearSelection();
        buttonGroup2.clearSelection();
        cb_perfil.setSelectedIndex(-1);
        txt_Apelido.setBorder(BorderFactory.createMatteBorder(0, 0, 2, 0, Color.BLACK));
        txt_Nome.setBorder(BorderFactory.createMatteBorder(0, 0, 2, 0, Color.BLACK));
        txt_email.setBorder(BorderFactory.createMatteBorder(0, 0, 2, 0, Color.BLACK));

    }

    /* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ pesquisa avancada      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     faz  a filtragem dos nome  existentes na base de dados. usando o nme 
     */
    public void FindUseName() {
        conexao = Conectar.conector();
        String sql = " select  f.codigoDeFuncionario ID, f.nome NOME, f.apelido  APELIDO, f.Genero GENERO,f.datadeNascimento DATA_DE_NASCEILMENTO, f.nrbi NrBI,f.nuit  NUIT, f.Contcto CONTACTO, C.categoria CATEGORIA ,f.email E_MAIL  from tbfuncionario f left outer join tbcategoria c  on f.id_categoria = c.id_categoria and  Nome like? and Statuss != 'removido' order by nome;";
        try {
            if (txt_pesquisar.getText().isEmpty()) {
                ((DefaultTableModel) jT_funcionarios.getModel()).setRowCount(0);
            } else {

                stat = conexao.prepareStatement(sql);
                stat.setString(1, txt_pesquisar.getText() + "%");
                rst = stat.executeQuery();
                jT_funcionarios.setModel(DbUtils.resultSetToTableModel(rst));
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage() + "  Registro nao Encontrado", "Notificação", JOptionPane.INFORMATION_MESSAGE);

        } finally {
            try {
                conexao.close();
                stat.close();
            } catch (Exception e) {

                JOptionPane.showMessageDialog(null, e + " Erro na conexao");
            }
        }

    }

    /* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ pesquisa avancada      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     faz  a filtragem dos nome  existentes na base de dados.
     */
    public void FindUseID() {
        conexao = Conectar.conector();
        String sql = "select  f.codigoDeFuncionario ID, f.nome NOME, f.apelido  APELIDO, f.Genero GENERO,f.datadeNascimento DATA_DE_NASCEILMENTO, f.nrbi NrBI,f.nuit  NUIT, f.Contcto CONTACTO, C.categoria CATEGORIA ,f.email E_MAIL  from tbfuncionario f left outer join tbcategoria c  on f.id_categoria = c.id_categoria and  Nome like? and Statuss != 'removido' order by nome;";
        try {
            if (txt_pesquisar.getText().isEmpty()) {
                ((DefaultTableModel) jT_funcionarios.getModel()).setRowCount(0);
            } else {

                stat = conexao.prepareStatement(sql);
                stat.setString(1, txt_pesquisar.getText() + "%");
                rst = stat.executeQuery();
                jT_funcionarios.setModel(DbUtils.resultSetToTableModel(rst));
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.getMessage() + "  Registro nao Encontrado", "Notificação", JOptionPane.INFORMATION_MESSAGE);

        } finally {
            try {
                conexao.close();
                stat.close();
            } catch (SQLException e) {

                JOptionPane.showMessageDialog(null, e + " Erro na conexao");
            }
        }

    }

    void validarCampos() {
        if (txt_Nome.getText().isEmpty()) {
            btn_salvar.setEnabled(false);
            JOptionPane.showMessageDialog(null, "O Campo  Nome deve Ser Preenchido!", "Atenção", JOptionPane.WARNING_MESSAGE);
        } else if (txt_Apelido.getText().isEmpty()) {
            btn_salvar.setEnabled(false);
            JOptionPane.showMessageDialog(null, "O Campo Apelido Deve  Ser Preenchido!", "Atenção", JOptionPane.WARNING_MESSAGE);
        } else if (txt_Nuit.getText().isEmpty()) {

            btn_salvar.setEnabled(false);
            JOptionPane.showMessageDialog(null, "O Campo  Nuit Deve Ser Preenchido!", "Atenção", JOptionPane.WARNING_MESSAGE);
        } else if (txt_NumeroDeBI.getText().isEmpty()) {

            btn_salvar.setEnabled(false);
            JOptionPane.showMessageDialog(null, "O Campo Número de BI Deve Ser Preenchido!", "Atenção", JOptionPane.WARNING_MESSAGE);
        } else if (JDataFormatada.getJCalendar() == null) {
            btn_salvar.setEnabled(false);
            JOptionPane.showMessageDialog(null, " Não foi seleccionada nenhuma data de nascimento, por favor informe uma!", "Atenção", JOptionPane.WARNING_MESSAGE);
        } else if (tf_contacto.getText().isEmpty()) {
            btn_salvar.setEnabled(false);
            JOptionPane.showMessageDialog(null, "O Campo Telefone Deve Ser Preenchido!", "Atenção", JOptionPane.WARNING_MESSAGE);
        } else if (cb_perfil.getActionCommand().isEmpty()) {
            btn_salvar.setEnabled(false);
            JOptionPane.showMessageDialog(null, "Por favor Informe uma categoria!", "Atenção", JOptionPane.WARNING_MESSAGE);
        } else if (f.validarEmail(txt_email.getText()) == false) {
            btn_salvar.setEnabled(false);
            JOptionPane.showMessageDialog(null, "Email Digitado Inválido! Por Favor Introduza um email válido", "Atenção", JOptionPane.WARNING_MESSAGE);

        } else if (tf_contacto.getText().length() < 16) {
            btn_salvar.setEnabled(false);
            JOptionPane.showMessageDialog(null, "Os Campo Contacto Deve Ser Preenchido \n O número de Telefone Deve conter apenas 9 digito!!", "Atenção", JOptionPane.WARNING_MESSAGE);
        } else {
            Registrar();
        }
    }

    /* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Registrar dados de funcionario ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    public void Registrar() {

        try {

            if (!pf_Senha.getText().isEmpty()) {
                System.out.println("                  Autenticação de usuario                    ");
                System.out.println("----------------------------------------------------------------------");
                System.out.println("username: " + txt_email.getText() + "\n A Senha: " + pf_Senha.getText());
                System.out.println("----------------------------------------------------------------------");
                JOptionPane.showMessageDialog(null, " As credencias foram enviadas no e-mail", "", JOptionPane.INFORMATION_MESSAGE);

            }
            funcionario.setSenha(pf_Senha.getText());
            funcionario.setApelido(txt_Apelido.getText());
            funcionario.setCodigo(lbl_Codigo.getText());
            funcionario.setNome(txt_Nome.getText());
            funcionario.setNumeroDeBI(txt_NumeroDeBI.getText());
            funcionario.setNuit(txt_Nuit.getText());
            //
            SimpleDateFormat formatando = new SimpleDateFormat("yyyy-MM-dd");
            String dataMysql = formatando.format(JDataFormatada.getDate());
            funcionario.setDatadeNascimento(dataMysql);

            //
            funcionario.setContacto(tf_contacto.getText());

            if (rb_Masculino.isSelected()) {

                funcionario.setGenero(rb_Masculino.getActionCommand());
            } else {

                funcionario.setGenero(rb_Femenino.getActionCommand());
            }

            funcionario.setEmail(txt_email.getText());
            funcionario.setNivelDeAcesso((NivelDeAcesso) cb_perfil.getSelectedItem());
            //provincia; 
            funcionario.setProvincia((Provincias) cb_provincias.getSelectedItem());
            funcionarioDao.saveFuncionario(funcionario);
            LimparCampos();
            PrencherTabela();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e + " Erro problema na digitação dos dados ", "Notificação", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }

    }

    /* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Atualizar dados de funcionario ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    public void atualizar() {

        try {

            /*validando os campos de preechimento
             */
            if (txt_Nome.getText().isEmpty() || txt_Nuit.getText().isEmpty()
                    || txt_NumeroDeBI.getText().isEmpty()
                    || tf_contacto.getText().isEmpty()
                    || rb_Masculino.getActionCommand().isEmpty() && rb_Masculino.getActionCommand().isEmpty()
                    || txt_email.getText().isEmpty() || cb_perfil.getActionCommand().isEmpty()) {

                JOptionPane.showMessageDialog(null, "Preenche os campos não vai ser possível fazer Actualização com os campos vazios", "Atenção", JOptionPane.WARNING_MESSAGE);

            } else {

                /* capitura a senha para criptografar*/
                funcionario.setSenha(pf_Senha.getText());
                funcionario.setApelido(txt_Apelido.getText());
                funcionario.setCodigo(lbl_Codigo.getText());
                funcionario.setNome(txt_Nome.getText());
                funcionario.setNumeroDeBI(txt_NumeroDeBI.getText());
                funcionario.setNuit(txt_NumeroDeBI.getText());
                //
                SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
                String anoStr = formato.format(JDataFormatada.getDate());
                funcionario.setDatadeNascimento(anoStr);

                //
                funcionario.setContacto(tf_contacto.getText());

                if (rb_Masculino.isSelected()) {

                    funcionario.setGenero(rb_Masculino.getActionCommand());
                } else {

                    funcionario.setGenero(rb_Femenino.getActionCommand());
                }

                funcionario.setEmail(txt_email.getText());
                funcionario.setNivelDeAcesso((NivelDeAcesso) cb_perfil.getSelectedItem());
                funcionario.setProvincia((Provincias) cb_provincias.getSelectedItem());

                funcionarioDao.Update(funcionario);
                LimparCampos();
                PrencherTabela();
                //
                btn_atualizar.setEnabled(false);
                btn_salvar.setEnabled(true);

//                }
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e + " Erro problema na digitação dos dados ", "Notificação", JOptionPane.ERROR_MESSAGE);
            System.out.println(e);
        }

    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel8 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jT_funcionarios = new javax.swing.JTable();
        ch_pesquisaId = new javax.swing.JCheckBox();
        txt_pesquisar = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txt_Nome = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        txt_Nuit = new javax.swing.JFormattedTextField();
        jLabel2 = new javax.swing.JLabel();
        rb_Masculino = new javax.swing.JRadioButton();
        rb_Femenino = new javax.swing.JRadioButton();
        jLabel15 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txt_email = new javax.swing.JTextField();
        btnLimpar = new javax.swing.JButton();
        cb_perfil = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        tf_contacto = new javax.swing.JFormattedTextField();
        jLabel7 = new javax.swing.JLabel();
        txt_Apelido = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        txt_NumeroDeBI = new javax.swing.JFormattedTextField();
        jLabel16 = new javax.swing.JLabel();
        JDataFormatada = new com.toedter.calendar.JDateChooser();
        pf_Senha = new javax.swing.JPasswordField();
        btn_atualizar = new javax.swing.JButton();
        btn_salvar = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        lbl_Codigo = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        cb_provincias = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 204, 204));
        setBorder(javax.swing.BorderFactory.createEtchedBorder());
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Registrar Funcionario ");
        setFocusable(false);
        setMinimumSize(new java.awt.Dimension(897, 606));
        setName(""); // NOI18N
        setPreferredSize(new java.awt.Dimension(897, 606));
        getContentPane().setLayout(null);

        jPanel8.setLayout(null);

        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel3.setLayout(null);

        jT_funcionarios = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIdex){
                return false;
            }
        };
        jT_funcionarios.setBackground(new java.awt.Color(204, 204, 204));
        jT_funcionarios.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jT_funcionarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nome", "Apelido", "Género", "Data de Nascimento", "BI", "Nuit", "Contacto", "Email ", "Categoria ", "Estado", "Senha "
            }
        ));
        jT_funcionarios.setToolTipText("Seelecione o Funcionário que pretendes eliminar ou  Atualizar os dados ");
        jT_funcionarios.setFocusable(false);
        jT_funcionarios.setPreferredSize(new java.awt.Dimension(897, 600));
        jT_funcionarios.setSelectionBackground(new java.awt.Color(232, 242, 252));
        jT_funcionarios.setSelectionForeground(new java.awt.Color(240, 240, 240));
        jT_funcionarios.setShowVerticalLines(false);
        jT_funcionarios.getTableHeader().setReorderingAllowed(false);
        jT_funcionarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jT_funcionariosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jT_funcionarios);

        jPanel3.add(jScrollPane1);
        jScrollPane1.setBounds(20, 80, 1010, 80);

        ch_pesquisaId.setFont(new java.awt.Font("Segoe UI", 1, 10)); // NOI18N
        ch_pesquisaId.setText("Seleccione para fazer a pesquisa via ID ");
        ch_pesquisaId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ch_pesquisaIdActionPerformed(evt);
            }
        });
        jPanel3.add(ch_pesquisaId);
        ch_pesquisaId.setBounds(20, 20, 205, 20);

        txt_pesquisar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txt_pesquisar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_pesquisarKeyReleased(evt);
            }
        });
        jPanel3.add(txt_pesquisar);
        txt_pesquisar.setBounds(20, 40, 205, 30);

        jLabel20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Jail_ts2022/icons/Pesq.png"))); // NOI18N
        jPanel3.add(jLabel20);
        jLabel20.setBounds(240, 40, 30, 30);

        jLabel40.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(204, 204, 204), null));
        jPanel3.add(jLabel40);
        jLabel40.setBounds(10, 10, 1030, 165);

        jPanel8.add(jPanel3);
        jPanel3.setBounds(5, 420, 1050, 185);

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204)));
        jPanel4.setLayout(null);

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("* Nome:");
        jPanel4.add(jLabel4);
        jLabel4.setBounds(60, 40, 90, 16);

        txt_Nome.setBackground(new java.awt.Color(240, 240, 240));
        txt_Nome.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txt_Nome.setToolTipText("");
        txt_Nome.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));
        txt_Nome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                txt_NomeMouseEntered(evt);
            }
        });
        txt_Nome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_NomeActionPerformed(evt);
            }
        });
        txt_Nome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_NomeKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_NomeKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_NomeKeyTyped(evt);
            }
        });
        jPanel4.add(txt_Nome);
        txt_Nome.setBounds(60, 70, 310, 30);

        jLabel17.setBackground(new java.awt.Color(255, 255, 255));
        jLabel17.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(51, 51, 51));
        jLabel17.setText("* Nuit:");
        jPanel4.add(jLabel17);
        jLabel17.setBounds(230, 110, 100, 20);

        txt_Nuit.setBackground(new java.awt.Color(240, 240, 240));
        txt_Nuit.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));
        try {
            txt_Nuit.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#########")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txt_Nuit.setText("");
        txt_Nuit.setToolTipText("");
        txt_Nuit.setEnabled(false);
        txt_Nuit.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txt_Nuit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_NuitKeyPressed(evt);
            }
        });
        jPanel4.add(txt_Nuit);
        txt_Nuit.setBounds(230, 130, 140, 30);

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel2.setText("Género:");
        jPanel4.add(jLabel2);
        jLabel2.setBounds(70, 210, 60, 30);

        buttonGroup.add(rb_Masculino);
        rb_Masculino.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        rb_Masculino.setText("Masculino");
        rb_Masculino.setEnabled(false);
        rb_Masculino.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                rb_MasculinoKeyPressed(evt);
            }
        });
        jPanel4.add(rb_Masculino);
        rb_Masculino.setBounds(130, 200, 100, 30);

        buttonGroup.add(rb_Femenino);
        rb_Femenino.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        rb_Femenino.setText("Feminino");
        rb_Femenino.setEnabled(false);
        rb_Femenino.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                rb_FemeninoKeyPressed(evt);
            }
        });
        jPanel4.add(rb_Femenino);
        rb_Femenino.setBounds(130, 230, 100, 25);

        jLabel15.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(204, 204, 204), null));
        jPanel4.add(jLabel15);
        jLabel15.setBounds(60, 190, 190, 70);

        jLabel6.setBackground(new java.awt.Color(255, 255, 255));
        jLabel6.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel6.setText("Senha");
        jPanel4.add(jLabel6);
        jLabel6.setBounds(400, 270, 110, 30);

        txt_email.setBackground(new java.awt.Color(240, 240, 240));
        txt_email.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txt_email.setToolTipText("");
        txt_email.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));
        txt_email.setEnabled(false);
        txt_email.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_emailKeyPressed(evt);
            }
        });
        jPanel4.add(txt_email);
        txt_email.setBounds(60, 300, 310, 30);

        btnLimpar.setBackground(new java.awt.Color(204, 255, 255));
        btnLimpar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnLimpar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Jail_ts2022/icons/clean.png"))); // NOI18N
        btnLimpar.setText("Limpar");
        btnLimpar.setToolTipText("Preencha os campos ");
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });
        jPanel4.add(btnLimpar);
        btnLimpar.setBounds(430, 350, 130, 31);

        cb_perfil.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cb_perfil.setToolTipText("");
        cb_perfil.setEnabled(false);
        cb_perfil.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cb_perfilItemStateChanged(evt);
            }
        });
        cb_perfil.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cb_perfilKeyPressed(evt);
            }
        });
        jPanel4.add(cb_perfil);
        cb_perfil.setBounds(570, 220, 170, 30);

        jLabel13.setBackground(new java.awt.Color(255, 255, 255));
        jLabel13.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(51, 51, 51));
        jLabel13.setText("* Categoria:");
        jPanel4.add(jLabel13);
        jLabel13.setBounds(570, 190, 130, 20);

        tf_contacto.setBackground(new java.awt.Color(240, 240, 240));
        tf_contacto.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));
        try {
            tf_contacto.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(+258)  #########")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        tf_contacto.setText("");
        tf_contacto.setToolTipText("");
        tf_contacto.setEnabled(false);
        tf_contacto.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tf_contacto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tf_contactoKeyPressed(evt);
            }
        });
        jPanel4.add(tf_contacto);
        tf_contacto.setBounds(450, 130, 210, 30);

        jLabel7.setBackground(new java.awt.Color(255, 255, 255));
        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(51, 51, 51));
        jLabel7.setText(" Contactos :");
        jPanel4.add(jLabel7);
        jLabel7.setBounds(450, 110, 140, 20);

        txt_Apelido.setBackground(new java.awt.Color(240, 240, 240));
        txt_Apelido.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txt_Apelido.setToolTipText("preenche o campo nome primeiro");
        txt_Apelido.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));
        txt_Apelido.setEnabled(false);
        txt_Apelido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_ApelidoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_ApelidoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_ApelidoKeyTyped(evt);
            }
        });
        jPanel4.add(txt_Apelido);
        txt_Apelido.setBounds(450, 70, 210, 30);

        jLabel12.setBackground(new java.awt.Color(255, 255, 255));
        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(51, 51, 51));
        jLabel12.setText("* Apelido:");
        jPanel4.add(jLabel12);
        jLabel12.setBounds(460, 40, 90, 20);

        jLabel19.setBackground(new java.awt.Color(255, 255, 255));
        jLabel19.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(51, 51, 51));
        jLabel19.setText("* Numero de BI:");
        jPanel4.add(jLabel19);
        jLabel19.setBounds(60, 110, 130, 20);

        txt_NumeroDeBI.setBackground(new java.awt.Color(240, 240, 240));
        txt_NumeroDeBI.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));
        try {
            txt_NumeroDeBI.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("############*")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txt_NumeroDeBI.setText("");
        txt_NumeroDeBI.setToolTipText("");
        txt_NumeroDeBI.setEnabled(false);
        txt_NumeroDeBI.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txt_NumeroDeBI.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_NumeroDeBIKeyPressed(evt);
            }
        });
        jPanel4.add(txt_NumeroDeBI);
        txt_NumeroDeBI.setBounds(60, 130, 140, 30);

        jLabel16.setBackground(new java.awt.Color(255, 255, 255));
        jLabel16.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(51, 51, 51));
        jLabel16.setText("Data de Nascimento:");
        jPanel4.add(jLabel16);
        jLabel16.setBounds(330, 190, 160, 20);

        JDataFormatada.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        JDataFormatada.setToolTipText("");
        JDataFormatada.setDateFormatString("dd-MM-YYYY");
        JDataFormatada.setEnabled(false);
        JDataFormatada.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        JDataFormatada.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                JDataFormatadaKeyPressed(evt);
            }
        });
        jPanel4.add(JDataFormatada);
        JDataFormatada.setBounds(330, 220, 180, 30);

        pf_Senha.setEditable(false);
        pf_Senha.setEnabled(false);
        jPanel4.add(pf_Senha);
        pf_Senha.setBounds(400, 300, 130, 30);

        btn_atualizar.setBackground(new java.awt.Color(204, 255, 255));
        btn_atualizar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btn_atualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Jail_ts2022/icons/atualizar.png"))); // NOI18N
        btn_atualizar.setText("Editar");
        btn_atualizar.setToolTipText("Seleccione um funcionaria na tabela");
        btn_atualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_atualizarActionPerformed(evt);
            }
        });
        jPanel4.add(btn_atualizar);
        btn_atualizar.setBounds(230, 350, 130, 31);

        btn_salvar.setBackground(new java.awt.Color(204, 255, 255));
        btn_salvar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btn_salvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Jail_ts2022/icons/add.png"))); // NOI18N
        btn_salvar.setText("Registar");
        btn_salvar.setToolTipText("Preencha os campos ");
        btn_salvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_salvarActionPerformed(evt);
            }
        });
        btn_salvar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btn_salvarKeyPressed(evt);
            }
        });
        jPanel4.add(btn_salvar);
        btn_salvar.setBounds(630, 350, 130, 31);

        jLabel11.setBackground(new java.awt.Color(255, 255, 255));
        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(51, 51, 51));
        jLabel11.setText("* campos obrigatorios ");
        jPanel4.add(jLabel11);
        jLabel11.setBounds(810, 20, 190, 10);

        jPanel5.setBackground(new java.awt.Color(204, 204, 204));
        jPanel5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel5.setLayout(null);

        jButton1.setBackground(new java.awt.Color(204, 204, 204));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Jail_ts2022/icons/est.png"))); // NOI18N
        jButton1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white)));
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jPanel5.add(jButton1);
        jButton1.setBounds(30, 60, 150, 170);

        lbl_Codigo.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lbl_Codigo.setForeground(new java.awt.Color(255, 0, 51));
        lbl_Codigo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_Codigo.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.lightGray, java.awt.Color.lightGray));
        jPanel5.add(lbl_Codigo);
        lbl_Codigo.setBounds(80, 20, 100, 25);

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel10.setText("Codigo");
        jPanel5.add(jLabel10);
        jLabel10.setBounds(30, 20, 50, 20);

        jPanel4.add(jPanel5);
        jPanel5.setBounds(800, 70, 200, 250);

        cb_provincias.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cb_provincias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_provinciasActionPerformed(evt);
            }
        });
        cb_provincias.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cb_provinciasKeyPressed(evt);
            }
        });
        jPanel4.add(cb_provincias);
        cb_provincias.setBounds(570, 300, 180, 30);

        jLabel8.setBackground(new java.awt.Color(255, 255, 255));
        jLabel8.setFont(new java.awt.Font("Segoe UI", 3, 10)); // NOI18N
        jLabel8.setText("* Login Por e-mail:");
        jPanel4.add(jLabel8);
        jLabel8.setBounds(60, 270, 150, 30);

        jLabel18.setBackground(new java.awt.Color(255, 255, 255));
        jLabel18.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(51, 51, 51));
        jLabel18.setText("Provincia:");
        jPanel4.add(jLabel18);
        jLabel18.setBounds(570, 270, 130, 30);

        jLabel5.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204)));
        jPanel4.add(jLabel5);
        jLabel5.setBounds(30, 30, 740, 140);

        jLabel37.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204)));
        jPanel4.add(jLabel37);
        jLabel37.setBounds(30, 180, 740, 85);

        jLabel39.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204)));
        jPanel4.add(jLabel39);
        jLabel39.setBounds(790, 40, 220, 300);

        jLabel38.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(153, 153, 153), null));
        jPanel4.add(jLabel38);
        jLabel38.setBounds(10, 10, 1020, 380);

        jLabel36.setFont(new java.awt.Font("Segoe UI", 1, 10)); // NOI18N
        jLabel36.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204)));
        jPanel4.add(jLabel36);
        jLabel36.setBounds(30, 270, 740, 70);

        jPanel8.add(jPanel4);
        jPanel4.setBounds(5, 10, 1050, 400);

        getContentPane().add(jPanel8);
        jPanel8.setBounds(0, 0, 1070, 610);

        setBounds(0, 0, 1072, 638);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_salvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_salvarActionPerformed
        validarCampos();
    }//GEN-LAST:event_btn_salvarActionPerformed

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed
        LimparCampos();
    }//GEN-LAST:event_btnLimparActionPerformed

    private void txt_emailKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_emailKeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (f.validarEmail(txt_email.getText()) == false) {
                txt_email.setBorder(BorderFactory.createMatteBorder(0, 0, 2, 0, Color.red));
                txt_email.requestFocus();
            } else {

                cb_provincias.requestFocus();
                txt_email.setBorder(BorderFactory.createMatteBorder(0, 0, 2, 0, Color.GREEN));

            }
        } else if (evt.getKeyCode() == KeyEvent.VK_BACK_SPACE) {
            txt_email.setBorder(BorderFactory.createMatteBorder(0, 0, 2, 0, Color.BLACK));
        }
        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            //    txtp_senha.requestFocus();
        }

    }//GEN-LAST:event_txt_emailKeyPressed

    private void txt_NomeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_NomeKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if ((Pattern.matches("^[a-zA-Z]+$", txt_Nome.getText()))) {
                txt_Nome.setBorder(BorderFactory.createMatteBorder(0, 0, 2, 0, Color.GREEN));
                txt_Apelido.requestFocus();
                txt_Apelido.setEnabled(true);
                Setarcodigo();
                FormatDatachoos();

            } else if (txt_Nome.getText().isEmpty()) {
                txt_Nome.requestFocus();
            } else {
                txt_Nome.setBorder(BorderFactory.createMatteBorder(0, 0, 2, 0, Color.red));
                txt_Nome.requestFocus();
            }
        } else if (evt.getKeyCode() == KeyEvent.VK_BACK_SPACE) {
            txt_Nome.setBorder(BorderFactory.createMatteBorder(0, 0, 2, 0, Color.BLACK));
        }


    }//GEN-LAST:event_txt_NomeKeyPressed

    private void txt_NomeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_NomeKeyTyped

    }//GEN-LAST:event_txt_NomeKeyTyped

    private void txt_ApelidoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_ApelidoKeyTyped

    }//GEN-LAST:event_txt_ApelidoKeyTyped

    private void txt_ApelidoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_ApelidoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            if (Pattern.matches("^[a-zA-Z]+$", txt_Apelido.getText())) {
                txt_Apelido.setBorder(BorderFactory.createMatteBorder(0, 0, 2, 0, Color.GREEN));
                txt_NumeroDeBI.requestFocus();
                txt_NumeroDeBI.setEnabled(true);

            } else if (txt_Apelido.getText().isEmpty()) {
                txt_Apelido.requestFocus();
            } else {
                txt_Apelido.setBorder(BorderFactory.createMatteBorder(0, 0, 2, 0, Color.red));
                txt_Apelido.requestFocus();

            }
        } else if (evt.getKeyCode() == KeyEvent.VK_BACK_SPACE) {
            txt_Apelido.setBorder(BorderFactory.createMatteBorder(0, 0, 2, 0, Color.BLACK));
        }


    }//GEN-LAST:event_txt_ApelidoKeyPressed

    private void txt_NumeroDeBIKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_NumeroDeBIKeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_Nuit.requestFocus();
            txt_Nuit.setEnabled(true);
        }
        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            txt_Nome.requestFocus();

        }
        if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            rb_Masculino.requestFocus();

        }

    }//GEN-LAST:event_txt_NumeroDeBIKeyPressed

    private void txt_NuitKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_NuitKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            tf_contacto.requestFocus();
            tf_contacto.setEnabled(true);
            funcionarioExistente();
        }
        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            txt_Nome.requestFocus();

        }
        if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            JDataFormatada.requestFocus();

        }

    }//GEN-LAST:event_txt_NuitKeyPressed

    private void tf_contactoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_contactoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            rb_Masculino.requestFocus();
            ativarCAmpos();
        }
        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            txt_Apelido.requestFocus();

        }
        if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            cb_perfil.requestFocus();

        }
    }//GEN-LAST:event_tf_contactoKeyPressed

    private void txt_NomeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_NomeKeyReleased

    }//GEN-LAST:event_txt_NomeKeyReleased

    private void txt_ApelidoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_ApelidoKeyReleased

    }//GEN-LAST:event_txt_ApelidoKeyReleased

    private void jT_funcionariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jT_funcionariosMouseClicked
        try {

            btn_atualizar.setEnabled(true);
            btn_salvar.setEnabled(false);
            
            sett_campos();

        } catch (Exception e) {
        }
    }//GEN-LAST:event_jT_funcionariosMouseClicked

    private void btn_salvarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btn_salvarKeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            validarCampos();
        }
    }//GEN-LAST:event_btn_salvarKeyPressed

    private void txt_NomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_NomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_NomeActionPerformed

    private void txt_NomeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_NomeMouseEntered

    }//GEN-LAST:event_txt_NomeMouseEntered

    private void btn_atualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_atualizarActionPerformed
        if (btn_atualizar.getText().equalsIgnoreCase("Editar")) {
            btn_atualizar.setText("Atualizar");
            ativarCAmpos();
        } else {
            btn_atualizar.setText("Editar");
            atualizar();
        }
        
        
    }//GEN-LAST:event_btn_atualizarActionPerformed

    private void ch_pesquisaIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ch_pesquisaIdActionPerformed

    }//GEN-LAST:event_ch_pesquisaIdActionPerformed

    private void txt_pesquisarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_pesquisarKeyReleased
        if (ch_pesquisaId.isSelected()) {
            FindUseID();
        } else if (txt_pesquisar.getText().isEmpty()) {
            PrencherTabela();
        } else {
            FindUseName();
        }
    }//GEN-LAST:event_txt_pesquisarKeyReleased

    private void JDataFormatadaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_JDataFormatadaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_RIGHT) {
            cb_perfil.requestFocus();
        }
    }//GEN-LAST:event_JDataFormatadaKeyPressed

    private void cb_perfilKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cb_perfilKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_email.requestFocus();
        }
    }//GEN-LAST:event_cb_perfilKeyPressed

    private void cb_perfilItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cb_perfilItemStateChanged
        if (Arrays.toString(cb_perfil.getSelectedObjects()).equals("[Gestor]")) {
            SentarSenha();
        } else {
            pf_Senha.setText(null);
        }
    }//GEN-LAST:event_cb_perfilItemStateChanged

    private void rb_MasculinoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rb_MasculinoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            rb_Masculino.isSelected();
            JDataFormatada.requestFocus();
        }
        if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            rb_Femenino.requestFocus();
        }
    }//GEN-LAST:event_rb_MasculinoKeyPressed

    private void rb_FemeninoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rb_FemeninoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            rb_Femenino.isSelected();
            JDataFormatada.requestFocus();
        }
        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            rb_Femenino.requestFocus();
        }
    }//GEN-LAST:event_rb_FemeninoKeyPressed

    private void cb_provinciasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_provinciasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cb_provinciasActionPerformed

    private void cb_provinciasKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cb_provinciasKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            validarCampos();
        }

    }//GEN-LAST:event_cb_provinciasKeyPressed

    private String dataf, captoSenha;
    private SimpleDateFormat sdf;
    int enter = 0;
    String[] codgo;
    ProvinciasDAo provincia = new ProvinciasDAo();
    List<Provincias> listarProvincia = provincia.ListaProvincias();
    //
    ControllerFuncionario f = new ControllerFuncionario();
    NivelDeAcessoDao nivel = new NivelDeAcessoDao();
    List<NivelDeAcesso> niveldeAcrsso = nivel.ListarNivelDeAcesso();
    //
    FuncionarioDao funcionarioDao = new FuncionarioDao();
    Funcionario funcionario = new Funcionario();

    Provincias provinciam = new Provincias();


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser JDataFormatada;
    private javax.swing.JButton btnLimpar;
    private javax.swing.JButton btn_atualizar;
    private javax.swing.JButton btn_salvar;
    private javax.swing.ButtonGroup buttonGroup;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox<Jail_ts2022.model.NivelDeAcesso> cb_perfil;
    private javax.swing.JComboBox<Jail_ts2022.model.Provincias> cb_provincias;
    private javax.swing.JCheckBox ch_pesquisaId;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jT_funcionarios;
    private javax.swing.JLabel lbl_Codigo;
    private javax.swing.JPasswordField pf_Senha;
    private javax.swing.JRadioButton rb_Femenino;
    private javax.swing.JRadioButton rb_Masculino;
    private javax.swing.JFormattedTextField tf_contacto;
    private javax.swing.JTextField txt_Apelido;
    private javax.swing.JTextField txt_Nome;
    private javax.swing.JFormattedTextField txt_Nuit;
    private javax.swing.JFormattedTextField txt_NumeroDeBI;
    private javax.swing.JTextField txt_email;
    private javax.swing.JTextField txt_pesquisar;
    // End of variables declaration//GEN-END:variables

}
